# Generated by Django 5.2.5 on 2025-08-12 18:16

import django.db.models.deletion
import guide.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.PositiveIntegerField(default=1, help_text='Порядок отображения')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200)),
            ],
            options={
                'ordering': ['position', 'id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NavLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.PositiveIntegerField(default=1, help_text='Порядок отображения')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект')),
                ('placement', models.CharField(choices=[('header', 'Шапка'), ('footer', 'Футер'), ('social', 'Соцсети')], db_index=True, default='header', help_text='Где показывать ссылку', max_length=12)),
                ('label', models.CharField(help_text='Текст ссылки', max_length=120)),
                ('url', models.URLField(help_text='Только http(s) ссылки')),
                ('icon_name', models.CharField(blank=True, help_text='Имя иконки из набора фронта (например, "github", "telegram")', max_length=64, null=True)),
                ('open_in_new_tab', models.BooleanField(default=True)),
                ('rel_nofollow', models.BooleanField(default=False)),
                ('rel_sponsored', models.BooleanField(default=False)),
                ('rel_noopener', models.BooleanField(default=True)),
                ('rel_noreferrer', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['position', 'id'],
                'abstract': False,
                'indexes': [models.Index(fields=['placement', 'position'], name='idx_navlink_place_pos')],
                'constraints': [models.UniqueConstraint(fields=('placement', 'label'), name='uq_navlink_placement_label')],
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.PositiveIntegerField(default=1, help_text='Порядок отображения')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='guide.product')),
            ],
            options={
                'ordering': ['position', 'id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QAItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.PositiveIntegerField(default=1, help_text='Порядок отображения')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект')),
                ('question', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('published', 'Опубликовано'), ('archived', 'Архив')], db_index=True, default='draft', max_length=16)),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qa_items', to='guide.subcategory')),
            ],
            options={
                'ordering': ['position', 'id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QABlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('position', models.PositiveIntegerField(default=1, help_text='Порядок отображения')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли объект')),
                ('kind', models.CharField(choices=[('heading', 'Заголовок'), ('text', 'Текст'), ('image', 'Картинка'), ('gif', 'GIF'), ('video', 'Видео')], max_length=16)),
                ('heading_text', models.CharField(blank=True, help_text='Текст заголовка без Markdown', max_length=255, null=True)),
                ('heading_level', models.PositiveSmallIntegerField(blank=True, choices=[(2, 'H2'), (3, 'H3'), (4, 'H4')], default=2, null=True)),
                ('heading_anchor', models.SlugField(blank=True, help_text='Якорь для ссылок/TOC (автогенерация)', max_length=255, null=True)),
                ('text_md', models.TextField(blank=True, help_text='Markdown для текстовых блоков', null=True)),
                ('media_file', models.FileField(blank=True, help_text='Загруженный файл (изображение/GIF/видео)', null=True, upload_to=guide.models.qa_media_upload_to)),
                ('media_url', models.URLField(blank=True, help_text='Внешняя ссылка на медиа', null=True)),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True)),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('qa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='guide.qaitem')),
            ],
            options={
                'ordering': ['position', 'id'],
                'abstract': False,
                'indexes': [models.Index(fields=['qa', 'position'], name='idx_qablocks_qa_pos')],
                'constraints': [models.UniqueConstraint(fields=('qa', 'position'), name='uq_qablock_qa_position'), models.CheckConstraint(condition=models.Q(models.Q(('kind', 'text'), ('text_md__isnull', False)), models.Q(('kind', 'text'), _negated=True), _connector='OR'), name='ck_qablock_text_requires_text'), models.CheckConstraint(condition=models.Q(models.Q(('kind__in', ['image', 'gif', 'video']), _negated=True), ('media_file__isnull', False), ('media_url__isnull', False), _connector='OR'), name='ck_qablock_media_requires_file_or_url'), models.CheckConstraint(condition=models.Q(models.Q(('heading_text__isnull', False), ('kind', 'heading')), models.Q(('kind', 'heading'), _negated=True), _connector='OR'), name='ck_qablock_heading_requires_text')],
            },
        ),
        migrations.AddConstraint(
            model_name='subcategory',
            constraint=models.UniqueConstraint(fields=('product', 'slug'), name='uq_subcategory_product_slug'),
        ),
        migrations.AddIndex(
            model_name='qaitem',
            index=models.Index(fields=['subcategory', 'position'], name='idx_qaitems_subcat_pos'),
        ),
    ]
